openapi: 3.0.0
info:
  version: 1.0.0
  title: voting-relayer
  description: ''
servers:
  - url: 'https://api.demo.tokend.io'
    description: TokenD Developer Environment
paths:
  '/integrations/registration-relayer/v1/operation/{root}':
    parameters:
      - name: root
        in: path
        description: Passport root
        required: true
        schema:
          type: string
    get:
      tags:
        - OperationByRoot
      summary: Operation info by passport root
      description: Retrieve information about the transited passport root
      operationId: GetOperationInfoByRoot
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/Operation'
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /integrations/registration-relayer/v1/operation/latest:
    get:
      tags:
        - GetLastOperationInfo
      summary: Get last operation info
      description: Retrieve information about the last passport root
      operationId: GetLastOperation
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/Operation'
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
  /integrations/registration-relayer/v1/vote:
    post:
      tags:
        - Voting
      summary: Voting
      operationId: vote
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  $ref: '#/components/schemas/SendTx'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/TxKey'
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
components:
  schemas:
    BadRequestError:
      type: object
      required:
        - title
        - status
        - code
      properties:
        title:
          type: string
          description: 'Short, human-readable summary of the problem'
          example: Bad Request
        detail:
          type: string
          description: Human-readable explanation specific to this occurrence of the problem
          example: Your request was invalid in some way.
        status:
          type: integer
          description: HTTP status code applicable to this problem
          enum:
            - 400
        code:
          type: string
          description: 'Application-specific error code, expressed as a string value'
          enum:
            - bad_request
            - bad_request_data
        meta:
          type: object
          description: Object containing non-standard meta-information about the error
          example:
            error: 'failed to verify issuer: failed to create a request: invalid url'
            error_info: Issuer check failed.
    InternalError:
      type: object
      required:
        - title
        - status
        - code
      properties:
        title:
          type: string
          description: 'Short, human-readable summary of the problem'
          example: Internal Error
        detail:
          type: string
          description: Human-readable explanation specific to this occurrence of the problem
          example: Some internal error occurred. Please report this error to service maintainers.
        status:
          type: integer
          description: HTTP status code applicable to this problem
          enum:
            - 500
        code:
          type: string
          description: 'Application-specific error code, expressed as a string value'
          enum:
            - internal_error
    NotFoundError:
      type: object
      required:
        - title
        - status
        - code
      properties:
        title:
          type: string
          description: 'Short, human-readable summary of the problem'
          example: Not Found
        detail:
          type: string
          description: Human-readable explanation specific to this occurrence of the problem
          example: The requested resource could not be found.
        status:
          type: integer
          description: HTTP status code applicable to this problem
          enum:
            - 404
        code:
          type: string
          description: 'Application-specific error code, expressed as a string value'
          enum:
            - not_found
    Operation:
      allOf:
        - $ref: '#/components/schemas/OperationKey'
        - type: object
          required:
            - relationships
            - attributes
          properties:
            attributes:
              type: object
              required:
                - tx_hash
                - destination_chain
                - operation_id
                - proof
                - block_height
              properties:
                tx_hash:
                  type: string
                  pattern: '^0x[0-9a-fA-F]+$'
                  example: '0xdeadbeafdeadbeafdeadbeaf'
                  description: Serialized transaction data
                destination_chain:
                  type: string
                  pattern: ''
                  example: '5'
                  description: Destination chain ID
                operation_id:
                  type: string
                  example: 0x0000...0000
                proof:
                  type: string
                  example: 0x0000...0000
                block_height:
                  type: int
                  format: uint64
                  example: 234234
    OperationKey:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - operation
    SendTx:
      allOf:
        - $ref: '#/components/schemas/SendTxKey'
        - type: object
          x-go-is-request: true
          required:
            - attributes
          properties:
            attributes:
              type: object
              required:
                - tx_data
                - destination
                - proposal_id
              properties:
                tx_data:
                  type: string
                  pattern: '^0x[0-9a-fA-F]+$'
                  example: '0xdeadbeafdeadbeafdeadbeaf'
                  description: Serialized transaction data
                destination:
                  type: string
                  pattern: '^0x[0-9a-fA-F]{40}'
                  example: 0xdead...beaf
                  description: Address of the contract to which the transaction data should be sent
                proposal_id:
                  type: integer
                  format: int64
                  example: 34234
    SendTxKey:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - send_transaction
    TxKey:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          example: 0xdead...beaf
          description: Transaction hash
        type:
          type: string
          enum:
            - transaction
  parameters:
    pageLimitParam:
      in: query
      name: 'page[limit]'
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 15
        description: Numbers of items per page to return.
    pageNumberParam:
      in: query
      name: 'page[number]'
      required: false
      schema:
        type: integer
      description: The number of a page to return.
    sortingParam:
      in: query
      name: 'page[order]'
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
        description: 'Order of records on the page. If sortingParam is not specified, order of records is by default sorted by ID.'
